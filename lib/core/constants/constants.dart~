import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'dart:ui' as ui;

class ScreenSizing{

  static double height = 0;
  static double width = 0;

  static initScreenSizing(BuildContext context){
    height = MediaQuery.of(context).size.height;
    width = MediaQuery.of(context).size.width;
  }

}



class Helpers {
  static String concatenateErrors(Map<String, dynamic> errors) {
    List<String> errorMessages = [];

    errors.forEach((key, value) {
      if (value is List) {
        for (var message in value) {
          errorMessages.add("$key: $message");
        }
      }
    });

    return errorMessages.join("\n"); // Join messages with a newline or any delimiter
  }

  static void showColoredToast({String? message, Color? color, Color? textColor}) {
    Fluttertoast.showToast(
      msg: message ?? 'No Toast',
      toastLength: Toast.LENGTH_SHORT,
      backgroundColor: color,
      textColor: textColor ?? Colors.white,
    );
  }

  static String formatFullAddress({
    required String fullAddress,
    required String city,
    required String country,
    required String street,
    String? apartmentNo,
    String? buildingNo,
  }) {
    List<String> addressParts = [
      "\"$fullAddress\"\n",
      "Street: $street\n",
      if (apartmentNo != null && apartmentNo.isNotEmpty) 'Apartment No: $apartmentNo\n',
      if (buildingNo != null && buildingNo.isNotEmpty) 'Building No: $buildingNo\n',
      "City: $city\n",
      "Country: $country\n",
    ];

    return addressParts.where((part) => part.isNotEmpty).join('');
  }

  static String formatLangFullAddress({required String location}) {
    String loc = location.replaceAll('\n', '\t\n');
    return loc;
  }

  static Map<int, bool> wishlistItems = {};
}
